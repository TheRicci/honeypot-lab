input {
  file {
    path => "/var/log/modsec_audit.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => multiline {
      pattern => "^--[A-Z]--$"
      negate  => false
      what    => "next"
    }
  }
}

filter {
  # ModSecurity Audit Log is in JSON format in the H part (transaction)
  grok {
    match => { "message" => "\-\-(?<section>[A-Z])\-\-[\s\S]*?" }
  }

  if [section] == "H" {
    json {
      source => "message"
      target => "modsec"
      skip_on_invalid_json => true
    }

    mutate {
      add_field => {
        "timestamp" => "%{modsec.transaction.time}"
        "remote_addr" => "%{modsec.transaction.remote_address}"
        "server" => "%{modsec.transaction.server_name}"
        "request" => "%{modsec.transaction.request_line}"
        "msg" => "%{modsec.messages.0.message}"
      }
    }

    date {
      match => ["timestamp", "ISO8601"]
      target => "@timestamp"
    }

    mutate {
      add_field => {
        "formatted_log" => "%{@timestamp} [error] 0#0: *0 %{msg}, client: %{remote_addr}, server: %{server}, request: \"%{request}\", host: \"%{server}\""
      }
    }
  }
}

output {
  stdout { codec => rubydebug }
  file {
    path => "/var/log/nginx/error_modsec.log"
    codec => line { format => "%{formatted_log}" }
  }
}

